<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="class_access_control" kind="class" language="C++" prot="public">
    <compoundname>AccessControl</compoundname>
    <includes refid="access__control__class_8h" local="no">access_control_class.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_access_control_1a378e6b12f5667e6cce401f79683bc3ac" prot="private" static="no" mutable="no">
        <type>const String</type>
        <definition>const String AccessControl::check_uuid_request</definition>
        <argsstring></argsstring>
        <name>check_uuid_request</name>
        <initializer>= &quot;/access_control/check_card&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/access_control_class.h" line="21" column="18" bodyfile="src/access_control_class.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_access_control_1aa8d9c6c82d4c320c927497a60c797687" prot="private" static="no" mutable="no">
        <type>WiFiClient</type>
        <definition>WiFiClient AccessControl::wifi</definition>
        <argsstring></argsstring>
        <name>wifi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/access_control_class.h" line="22" column="16" bodyfile="src/access_control_class.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_access_control_1aea902add4bc7ad2e68b8b500eb8de698" prot="private" static="no" mutable="no">
        <type><ref refid="class_config_storage" kindref="compound">ConfigStorage</ref> *</type>
        <definition>ConfigStorage* AccessControl::config</definition>
        <argsstring></argsstring>
        <name>config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/access_control_class.h" line="23" column="19" bodyfile="src/access_control_class.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_access_control_1ad40256e9d726b8900153ae2d6c9d7f29" prot="private" static="no" mutable="no">
        <type>MFRC522</type>
        <definition>MFRC522 AccessControl::mfrc522</definition>
        <argsstring></argsstring>
        <name>mfrc522</name>
        <initializer>= MFRC522(<ref refid="access__control__class_8h_1a86fac98c9b4c98a3e50fc45440878391" kindref="member">SS_PIN</ref>, <ref refid="access__control__class_8h_1a36932b0e869e0114f32e255f61306d6b" kindref="member">RST_PIN</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/access_control_class.h" line="24" column="13" bodyfile="src/access_control_class.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_access_control_1a97f11585196775132bc150f2e2834234" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AccessControl::ChangeColor</definition>
        <argsstring>(bool red, bool green)</argsstring>
        <name>ChangeColor</name>
        <param>
          <type>bool</type>
          <declname>red</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>green</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/access_control_class.h" line="25" column="10" bodyfile="src/access_control_class.cpp" bodystart="5" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="class_access_control_1a6e307674ecb7a9a8f6e4187760460aa4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AccessControl::ProcessCardIfExists</definition>
        <argsstring>()</argsstring>
        <name>ProcessCardIfExists</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/access_control_class.h" line="26" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_access_control_1a144900ee74e42507c47ccc459cd0bfdd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AccessControl::Unlock</definition>
        <argsstring>()</argsstring>
        <name>Unlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/access_control_class.h" line="27" column="10" bodyfile="src/access_control_class.cpp" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_access_control_1a2361155ce0437cd56457da34e6e7d7e1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AccessControl::Lock</definition>
        <argsstring>()</argsstring>
        <name>Lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/access_control_class.h" line="28" column="10" bodyfile="src/access_control_class.cpp" bodystart="20" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_access_control_1a1c58bdbeb243dc7a74fae6127ebb02f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AccessControl::Block</definition>
        <argsstring>()</argsstring>
        <name>Block</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/access_control_class.h" line="29" column="10" bodyfile="src/access_control_class.cpp" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_access_control_1a680f29b5ba2a6a756a38563ec9499265" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AccessControl::IsCardHaveAccess</definition>
        <argsstring>(String uuid)</argsstring>
        <name>IsCardHaveAccess</name>
        <param>
          <type>String</type>
          <declname>uuid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/access_control_class.h" line="30" column="10" bodyfile="src/access_control_class.cpp" bodystart="66" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_access_control_1a29d5a620af07c77acf86f907ee6a95a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AccessControl::ProcessCardIfPresent</definition>
        <argsstring>()</argsstring>
        <name>ProcessCardIfPresent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/access_control_class.h" line="31" column="10" bodyfile="src/access_control_class.cpp" bodystart="38" bodyend="64"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_access_control_1afe296192e5b8839f6437181d751bdf64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AccessControl::AccessControl</definition>
        <argsstring>(ConfigStorage *cfg)</argsstring>
        <name>AccessControl</name>
        <param>
          <type><ref refid="class_config_storage" kindref="compound">ConfigStorage</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/access_control_class.h" line="34" column="5" bodyfile="src/access_control_class.cpp" bodystart="3" bodyend="3"/>
      </memberdef>
      <memberdef kind="function" id="class_access_control_1a3dcb6b1a7436599ad7a5328ed60ede0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AccessControl::Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/access_control_class.h" line="35" column="10" bodyfile="src/access_control_class.cpp" bodystart="11" bodyend="18"/>
        <references refid="access__control__class_8h_1a6bbd71033d7bc9fd6244ee5341a9dc93" compoundref="access__control__class_8h" startline="16">GREEN_PIN</references>
        <references refid="access__control__class_8h_1a9b8c6a744f21ca81f09f5e0e97f097c4" compoundref="access__control__class_8h" startline="14">LOCK_PIN</references>
        <references refid="access__control__class_8h_1abb59794325aa606c6b13c60dd6c7ab5f" compoundref="access__control__class_8h" startline="15">RED_PIN</references>
      </memberdef>
      <memberdef kind="function" id="class_access_control_1a86ca8261b478add076390a0d2298e130" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AccessControl::NextCard</definition>
        <argsstring>()</argsstring>
        <name>NextCard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/access_control_class.h" line="36" column="10" bodyfile="src/access_control_class.cpp" bodystart="81" bodyend="93"/>
        <references refid="class_config_storage_1a0bfc333e4f825b504a58d7b06c7c1527" compoundref="config__storage__class_8h" startline="20">ConfigStorage::lockState</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/access_control_class.h" line="18" column="1" bodyfile="src/access_control_class.h" bodystart="19" bodyend="37"/>
    <listofallmembers>
      <member refid="class_access_control_1afe296192e5b8839f6437181d751bdf64" prot="public" virt="non-virtual"><scope>AccessControl</scope><name>AccessControl</name></member>
      <member refid="class_access_control_1a1c58bdbeb243dc7a74fae6127ebb02f1" prot="private" virt="non-virtual"><scope>AccessControl</scope><name>Block</name></member>
      <member refid="class_access_control_1a97f11585196775132bc150f2e2834234" prot="private" virt="non-virtual"><scope>AccessControl</scope><name>ChangeColor</name></member>
      <member refid="class_access_control_1a378e6b12f5667e6cce401f79683bc3ac" prot="private" virt="non-virtual"><scope>AccessControl</scope><name>check_uuid_request</name></member>
      <member refid="class_access_control_1aea902add4bc7ad2e68b8b500eb8de698" prot="private" virt="non-virtual"><scope>AccessControl</scope><name>config</name></member>
      <member refid="class_access_control_1a3dcb6b1a7436599ad7a5328ed60ede0d" prot="public" virt="non-virtual"><scope>AccessControl</scope><name>Init</name></member>
      <member refid="class_access_control_1a680f29b5ba2a6a756a38563ec9499265" prot="private" virt="non-virtual"><scope>AccessControl</scope><name>IsCardHaveAccess</name></member>
      <member refid="class_access_control_1a2361155ce0437cd56457da34e6e7d7e1" prot="private" virt="non-virtual"><scope>AccessControl</scope><name>Lock</name></member>
      <member refid="class_access_control_1ad40256e9d726b8900153ae2d6c9d7f29" prot="private" virt="non-virtual"><scope>AccessControl</scope><name>mfrc522</name></member>
      <member refid="class_access_control_1a86ca8261b478add076390a0d2298e130" prot="public" virt="non-virtual"><scope>AccessControl</scope><name>NextCard</name></member>
      <member refid="class_access_control_1a6e307674ecb7a9a8f6e4187760460aa4" prot="private" virt="non-virtual"><scope>AccessControl</scope><name>ProcessCardIfExists</name></member>
      <member refid="class_access_control_1a29d5a620af07c77acf86f907ee6a95a4" prot="private" virt="non-virtual"><scope>AccessControl</scope><name>ProcessCardIfPresent</name></member>
      <member refid="class_access_control_1a144900ee74e42507c47ccc459cd0bfdd" prot="private" virt="non-virtual"><scope>AccessControl</scope><name>Unlock</name></member>
      <member refid="class_access_control_1aa8d9c6c82d4c320c927497a60c797687" prot="private" virt="non-virtual"><scope>AccessControl</scope><name>wifi</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
